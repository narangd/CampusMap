buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.7'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}


android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.example.campusmap"
        testApplicationId "com.example.campusmap.tests"

        // version auto increment
        def versionPropsFile = file('version.properties')
        def code = 10

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()

            versionProps.load(new FileInputStream(versionPropsFile))

            code = versionProps['VERSION_CODE'].toInteger() + 1

            versionProps['VERSION_CODE']=code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }
        else {
            throw new GradleException("Could not read version.properties!")
        }
        // end version auto increment

        minSdkVersion 15
        targetSdkVersion 25
        versionCode code
        versionName "1.5.1"
        setProperty("archivesBaseName", "campusmap(v$versionName)")
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/manifest.MF'

        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/spring.handlers'
        exclude 'META-INF/spring.schemas'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
def supportLibraryVersion = "25.1.1"
def lombokVersion = "1.16.12"
def jacksonVersion = "2.8.6"
def jsoupVersion = "1.10.2"
def restTemplateVersion = "2.0.0.M4"
def slf4jVersion = "1.7.23"

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
        transitive = true;
    }
    compile(group: 'com.android.support', name: 'support-v4', version: supportLibraryVersion)
    compile(group: 'com.android.support', name: 'appcompat-v7', version: supportLibraryVersion)
    compile(group: 'com.android.support', name: 'cardview-v7', version: supportLibraryVersion)
    compile(group: 'com.android.support', name: 'recyclerview-v7', version: supportLibraryVersion)
    compile(group: 'com.android.support', name: 'design', version: supportLibraryVersion)
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile(group: 'org.jsoup', name: 'jsoup', version: jsoupVersion)
    compile 'com.naver.maps.open:naver-map-api:2.1.2@aar'
    // 강제
    compile(group: 'org.projectlombok', name: 'lombok', version: lombokVersion)
    //    provided("org.projectlombok:lombok:$lombokVersion")
    //compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
//     https://mvnrepository.com/artifact/org.springframework.android/spring-android-rest-template
    compile (group: 'org.springframework.android', name: 'spring-android-rest-template', version: '2.0.0.M4')
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
    compile (group:'org.springframework.android', name:'spring-android-rest-template', version:restTemplateVersion)
    //
        compile 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
}
